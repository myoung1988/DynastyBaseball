/*
Deployment script for Baseball

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Baseball"
:setvar DefaultFilePrefix "Baseball"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

SET NOCOUNT ON
 DECLARE @table TABLE(
RowId INT PRIMARY KEY IDENTITY(1, 1),
ForeignKeyConstraintName NVARCHAR(200),
ForeignKeyConstraintTableSchema NVARCHAR(200),
ForeignKeyConstraintTableName NVARCHAR(200),
ForeignKeyConstraintColumnName NVARCHAR(200),
PrimaryKeyConstraintName NVARCHAR(200),
PrimaryKeyConstraintTableSchema NVARCHAR(200),
PrimaryKeyConstraintTableName NVARCHAR(200),
PrimaryKeyConstraintColumnName NVARCHAR(200)
 )
INSERT INTO @table(ForeignKeyConstraintName, ForeignKeyConstraintTableSchema, ForeignKeyConstraintTableName, ForeignKeyConstraintColumnName)
SELECT
U.CONSTRAINT_NAME,
U.TABLE_SCHEMA,
U.TABLE_NAME,
U.COLUMN_NAME
FROM
INFORMATION_SCHEMA.KEY_COLUMN_USAGE U
INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
ON U.CONSTRAINT_NAME = C.CONSTRAINT_NAME
WHERE
C.CONSTRAINT_TYPE = 'FOREIGN KEY'
UPDATE @table SET
PrimaryKeyConstraintName = UNIQUE_CONSTRAINT_NAME
FROM
@table T
INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS R
ON T.ForeignKeyConstraintName = R.CONSTRAINT_NAME
UPDATE @table SET
PrimaryKeyConstraintTableSchema = TABLE_SCHEMA,
PrimaryKeyConstraintTableName = TABLE_NAME
FROM @table T
INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
ON T.PrimaryKeyConstraintName = C.CONSTRAINT_NAME
UPDATE @table SET
PrimaryKeyConstraintColumnName = COLUMN_NAME
FROM @table T
INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE U
ON T.PrimaryKeyConstraintName = U.CONSTRAINT_NAME
--SELECT * FROM @table
 --DROP CONSTRAINT:
SELECT
'
 ALTER TABLE [' + ForeignKeyConstraintTableSchema + '].[' + ForeignKeyConstraintTableName + ']
 DROP CONSTRAINT ' + ForeignKeyConstraintName + '

GO'
FROM
@table
--ADD CONSTRAINT:
SELECT
'
ALTER TABLE [' + ForeignKeyConstraintTableSchema + '].[' + ForeignKeyConstraintTableName + ']
ADD CONSTRAINT ' + ForeignKeyConstraintName + ' FOREIGN KEY(' + ForeignKeyConstraintColumnName + ') REFERENCES [' + PrimaryKeyConstraintTableSchema + '].[' + PrimaryKeyConstraintTableName + '](' + PrimaryKeyConstraintColumnName + ')

GO'
FROM
@table
GO

-- Drop All Tables
sp_msforeachtable 'drop table ?'
GO

GO
PRINT N'Creating [Fantasy]...';


GO
CREATE SCHEMA [Fantasy]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [LeagueConfig]...';


GO
CREATE SCHEMA [LeagueConfig]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [MLB]...';


GO
CREATE SCHEMA [MLB]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [SystemConfig]...';


GO
CREATE SCHEMA [SystemConfig]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Fantasy].[League]...';


GO
CREATE TABLE [Fantasy].[League] (
    [FantasyLeagueID]    INT          NOT NULL,
    [Name]               VARCHAR (50) NOT NULL,
    [OwnerID]            INT          NULL,
    [LeagueEntryFee]     MONEY        NULL,
    [LeagueType]         VARCHAR (1)  NULL,
    [Date_Time_Created]  DATETIME     NOT NULL,
    [User_Id_Created]    VARCHAR (50) NULL,
    [Date_Time_Modified] DATETIME     NOT NULL,
    [User_Id_Modified]   VARCHAR (50) NULL,
    [Form_Id]            VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([FantasyLeagueID] ASC)
);


GO
PRINT N'Creating [Fantasy].[Team]...';


GO
CREATE TABLE [Fantasy].[Team] (
    [FantasyTeamID]      INT           NOT NULL,
    [FantasyLeagueID]    INT           NOT NULL,
    [Name]               VARCHAR (100) NOT NULL,
    [Abbreviation]       VARCHAR (3)   NOT NULL,
    [Logo]               VARCHAR (MAX) NULL,
    [Date_Time_Created]  DATETIME      NOT NULL,
    [User_Id_Created]    VARCHAR (50)  NULL,
    [Date_Time_Modified] DATETIME      NOT NULL,
    [User_Id_Modified]   VARCHAR (50)  NULL,
    [Form_Id]            VARCHAR (50)  NULL,
    CONSTRAINT [PK_Fantasy_Team] PRIMARY KEY CLUSTERED ([FantasyTeamID] ASC, [FantasyLeagueID] ASC)
);


GO
PRINT N'Creating [Fantasy].[Roster]...';


GO
CREATE TABLE [Fantasy].[Roster] (
    [FantasyTeamID]      INT          NOT NULL,
    [FantasyLeagueID]    INT          NOT NULL,
    [PlayerID]           INT          NOT NULL,
    [Status]             VARCHAR (1)  NOT NULL,
    [Date_Time_Created]  DATETIME     NOT NULL,
    [User_Id_Created]    VARCHAR (50) NULL,
    [Date_Time_Modified] DATETIME     NOT NULL,
    [User_Id_Modified]   VARCHAR (50) NULL,
    [Form_Id]            VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([FantasyTeamID] ASC, [PlayerID] ASC, [FantasyLeagueID] ASC)
);


GO
PRINT N'Creating [LeagueConfig].[Config]...';


GO
CREATE TABLE [LeagueConfig].[Config] (
    [FantasyLeagueID]     INT           NOT NULL,
    [LeagueImage]         VARCHAR (500) NULL,
    [Rules]               TEXT          NULL,
    [CommissionerMessage] NCHAR (10)    NULL,
    [Date_Time_Created]   DATETIME      NOT NULL,
    [User_Id_Created]     VARCHAR (50)  NULL,
    [Date_Time_Modified]  DATETIME      NOT NULL,
    [User_Id_Modified]    VARCHAR (50)  NULL,
    [Form_Id]             VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([FantasyLeagueID] ASC)
);


GO
PRINT N'Creating [LeagueConfig].[Transaction_Policies]...';


GO
CREATE TABLE [LeagueConfig].[Transaction_Policies] (
    [FantasyLeagueID]          INT          NOT NULL,
    [ChangeLineUpPolicy]       BIT          NOT NULL,
    [LineUpEffectiveDate]      VARCHAR (1)  NOT NULL,
    [LineUpDeadline]           VARCHAR (5)  NOT NULL,
    [RestrictDL]               BIT          NOT NULL,
    [RestrictMinors]           BIT          NOT NULL,
    [EnforceLineUpPolicy]      BIT          NOT NULL,
    [AddDropPolicy]            VARCHAR (5)  NOT NULL,
    [MaxTransactionsPerPeriod] INT          NULL,
    [TradePolicy]              VARCHAR (5)  NOT NULL,
    [VotingPeriod]             INT          NULL,
    [AllowableObjections]      INT          NULL,
    [TradeDeadline]            DATE         NULL,
    [AllowOffseasonTrades]     BIT          NOT NULL,
    [AllowDraftPickTrading]    BIT          NOT NULL,
    [Date_Time_Created]        DATETIME     NOT NULL,
    [User_Id_Created]          VARCHAR (50) NULL,
    [Date_Time_Modified]       DATETIME     NOT NULL,
    [User_Id_Modified]         VARCHAR (50) NULL,
    [Form_Id]                  VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([FantasyLeagueID] ASC)
);


GO
PRINT N'Creating [LeagueConfig].[Scoring_System]...';


GO
CREATE TABLE [LeagueConfig].[Scoring_System] (
    [FantasyLeagueID]      INT         NOT NULL,
    [ScoringType]          VARCHAR (4) NOT NULL,
    [WinDetermination]     VARCHAR (4) NULL,
    [TieBreaker]           NCHAR (10)  NULL,
    [TieBreakerCategoryID] INT         NULL,
    [UseCategoryWeights]   BIT         NULL,
    PRIMARY KEY CLUSTERED ([FantasyLeagueID] ASC)
);


GO
PRINT N'Creating [LeagueConfig].[Scoring_System_Category_PointBonuses]...';


GO
CREATE TABLE [LeagueConfig].[Scoring_System_Category_PointBonuses] (
    [FantasyLeagueID]    INT             NOT NULL,
    [CategoryID]         INT             NOT NULL,
    [AwardBonusPointsAt] DECIMAL (18, 2) NULL,
    [BonusPoints]        DECIMAL (18, 2) NULL,
    [Date_Time_Created]  DATETIME        NOT NULL,
    [User_Id_Created]    VARCHAR (50)    NULL,
    [Date_Time_Modified] DATETIME        NOT NULL,
    [User_Id_Modified]   VARCHAR (50)    NULL,
    [Form_Id]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating [LeagueConfig].[Scoring_System_Category_PointRange]...';


GO
CREATE TABLE [LeagueConfig].[Scoring_System_Category_PointRange] (
    [FantasyLeagueID]    INT             NOT NULL,
    [CategoryID]         INT             NOT NULL,
    [FromValue]          DECIMAL (18, 2) NOT NULL,
    [ToValue]            DECIMAL (18, 2) NOT NULL,
    [PointsForRange]     DECIMAL (18, 2) NOT NULL,
    [Date_Time_Created]  DATETIME        NOT NULL,
    [User_Id_Created]    VARCHAR (50)    NULL,
    [Date_Time_Modified] DATETIME        NOT NULL,
    [User_Id_Modified]   VARCHAR (50)    NULL,
    [Form_Id]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating [LeagueConfig].[Scoring_System_Category]...';


GO
CREATE TABLE [LeagueConfig].[Scoring_System_Category] (
    [FantasyLeagueID]    INT             NOT NULL,
    [CategoryID]         INT             NOT NULL,
    [HeadToHeadWeight]   DECIMAL (3, 1)  NULL,
    [PointValuePer]      DECIMAL (18, 2) NULL,
    [UseScoringRanges]   BIT             NULL,
    [UseScoringBonuses]  BIT             NULL,
    [Date_Time_Created]  DATETIME        NOT NULL,
    [User_Id_Created]    VARCHAR (50)    NULL,
    [Date_Time_Modified] DATETIME        NOT NULL,
    [User_Id_Modified]   VARCHAR (50)    NULL,
    [Form_Id]            VARCHAR (50)    NULL,
    CONSTRAINT [PK_Scoring_System_Categories] PRIMARY KEY CLUSTERED ([FantasyLeagueID] ASC, [CategoryID] ASC)
);


GO
PRINT N'Creating [MLB].[Player]...';


GO
CREATE TABLE [MLB].[Player] (
    [PlayerID]           INT           NOT NULL,
    [FirstName]          VARCHAR (100) NOT NULL,
    [LastName]           VARCHAR (100) NOT NULL,
    [Bats]               VARCHAR (1)   NOT NULL,
    [Throws]             VARCHAR (1)   NOT NULL,
    [TeamID]             INT           NOT NULL,
    [Birthdate]          DATE          NOT NULL,
    [Date_Time_Created]  DATETIME      NOT NULL,
    [User_Id_Created]    VARCHAR (50)  NULL,
    [Date_Time_Modified] DATETIME      NOT NULL,
    [User_Id_Modified]   VARCHAR (50)  NULL,
    [Form_Id]            VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([PlayerID] ASC)
);


GO
PRINT N'Creating [MLB].[Position]...';


GO
CREATE TABLE [MLB].[Position] (
    [PositionID]         INT           NOT NULL,
    [Name]               VARCHAR (100) NOT NULL,
    [Date_Time_Created]  DATETIME      NOT NULL,
    [User_Id_Created]    VARCHAR (50)  NULL,
    [Date_Time_Modified] DATETIME      NOT NULL,
    [User_Id_Modified]   VARCHAR (50)  NULL,
    [Form_Id]            VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([PositionID] ASC)
);


GO
PRINT N'Creating [MLB].[Stats_Daily]...';


GO
CREATE TABLE [MLB].[Stats_Daily] (
    [PlayerID]           INT            NOT NULL,
    [Day]                DATE           NOT NULL,
    [AB]                 INT            NULL,
    [R]                  INT            NULL,
    [H]                  INT            NULL,
    [1B]                 INT            NULL,
    [2B]                 INT            NULL,
    [3B]                 INT            NULL,
    [HR]                 INT            NULL,
    [RBI]                INT            NULL,
    [BB]                 INT            NULL,
    [KO]                 INT            NULL,
    [SB]                 INT            NULL,
    [CS]                 INT            NULL,
    [BA]                 DECIMAL (4, 3) NULL,
    [OBP]                DECIMAL (4, 3) NULL,
    [SLG]                DECIMAL (4, 3) NULL,
    [INN]                DECIMAL (4, 1) NULL,
    [GS]                 INT            NULL,
    [QS]                 INT            NULL,
    [CG]                 INT            NULL,
    [W]                  INT            NULL,
    [L]                  INT            NULL,
    [S]                  INT            NULL,
    [K]                  INT            NULL,
    [ERA]                DECIMAL (6, 3) NULL,
    [WHIP]               DECIMAL (4, 3) NULL,
    [Date_Time_Created]  DATETIME       NOT NULL,
    [User_Id_Created]    VARCHAR (50)   NULL,
    [Date_Time_Modified] DATETIME       NOT NULL,
    [User_Id_Modified]   VARCHAR (50)   NULL,
    [Form_Id]            VARCHAR (50)   NULL,
    PRIMARY KEY CLUSTERED ([Day] ASC, [PlayerID] ASC)
);


GO
PRINT N'Creating [MLB].[Stats_Projection]...';


GO
CREATE TABLE [MLB].[Stats_Projection] (
    [PlayerID]           INT            NOT NULL,
    [Day]                DATE           NOT NULL,
    [AB]                 INT            NULL,
    [R]                  INT            NULL,
    [H]                  INT            NULL,
    [1B]                 INT            NULL,
    [2B]                 INT            NULL,
    [3B]                 INT            NULL,
    [HR]                 INT            NULL,
    [RBI]                INT            NULL,
    [BB]                 INT            NULL,
    [KO]                 INT            NULL,
    [SB]                 INT            NULL,
    [CS]                 INT            NULL,
    [BA]                 DECIMAL (4, 3) NULL,
    [OBP]                DECIMAL (4, 3) NULL,
    [SLG]                DECIMAL (4, 3) NULL,
    [INN]                DECIMAL (4, 1) NULL,
    [GS]                 INT            NULL,
    [QS]                 INT            NULL,
    [CG]                 INT            NULL,
    [W]                  INT            NULL,
    [L]                  INT            NULL,
    [S]                  INT            NULL,
    [K]                  INT            NULL,
    [ERA]                DECIMAL (6, 3) NULL,
    [WHIP]               DECIMAL (4, 3) NULL,
    [Date_Time_Created]  DATETIME       NOT NULL,
    [User_Id_Created]    VARCHAR (50)   NULL,
    [Date_Time_Modified] DATETIME       NOT NULL,
    [User_Id_Modified]   VARCHAR (50)   NULL,
    [Form_Id]            VARCHAR (50)   NULL,
    PRIMARY KEY CLUSTERED ([Day] ASC, [PlayerID] ASC)
);


GO
PRINT N'Creating [MLB].[Stats_Season]...';


GO
CREATE TABLE [MLB].[Stats_Season] (
    [PlayerID]           INT            NOT NULL,
    [Day]                DATE           NOT NULL,
    [AB]                 INT            NULL,
    [R]                  INT            NULL,
    [H]                  INT            NULL,
    [1B]                 INT            NULL,
    [2B]                 INT            NULL,
    [3B]                 INT            NULL,
    [HR]                 INT            NULL,
    [RBI]                INT            NULL,
    [BB]                 INT            NULL,
    [KO]                 INT            NULL,
    [SB]                 INT            NULL,
    [CS]                 INT            NULL,
    [BA]                 DECIMAL (4, 3) NULL,
    [OBP]                DECIMAL (4, 3) NULL,
    [SLG]                DECIMAL (4, 3) NULL,
    [INN]                DECIMAL (4, 1) NULL,
    [GS]                 INT            NULL,
    [QS]                 INT            NULL,
    [CG]                 INT            NULL,
    [W]                  INT            NULL,
    [L]                  INT            NULL,
    [S]                  INT            NULL,
    [K]                  INT            NULL,
    [ERA]                DECIMAL (6, 3) NULL,
    [WHIP]               DECIMAL (4, 3) NULL,
    [Date_Time_Created]  DATETIME       NOT NULL,
    [User_Id_Created]    VARCHAR (50)   NULL,
    [Date_Time_Modified] DATETIME       NOT NULL,
    [User_Id_Modified]   VARCHAR (50)   NULL,
    [Form_Id]            VARCHAR (50)   NULL,
    PRIMARY KEY CLUSTERED ([Day] ASC, [PlayerID] ASC)
);


GO
PRINT N'Creating [MLB].[Team]...';


GO
CREATE TABLE [MLB].[Team] (
    [TeamID]             INT           NOT NULL,
    [City]               VARCHAR (100) NULL,
    [State]              VARCHAR (2)   NULL,
    [Abbreviation]       VARCHAR (3)   NOT NULL,
    [Name]               VARCHAR (100) NOT NULL,
    [Status]             BIT           NULL,
    [League]             VARCHAR (3)   NOT NULL,
    [Date_Time_Created]  DATETIME      NOT NULL,
    [User_Id_Created]    VARCHAR (50)  NULL,
    [Date_Time_Modified] DATETIME      NOT NULL,
    [User_Id_Modified]   VARCHAR (50)  NULL,
    [Form_Id]            VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([TeamID] ASC)
);


GO
PRINT N'Creating [MLB].[Eligibility]...';


GO
CREATE TABLE [MLB].[Eligibility] (
    [PlayerID]           INT          NOT NULL,
    [PositionID]         INT          NOT NULL,
    [Season]             DATE         NOT NULL,
    [PrimaryPos]         BIT          NOT NULL,
    [DaysPlayed]         INT          NOT NULL,
    [Date_Time_Created]  DATETIME     NOT NULL,
    [User_Id_Created]    VARCHAR (50) NULL,
    [Date_Time_Modified] DATETIME     NOT NULL,
    [User_Id_Modified]   VARCHAR (50) NULL,
    [Form_Id]            VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([PlayerID] ASC, [PositionID] ASC, [Season] ASC)
);


GO
PRINT N'Creating [SystemConfig].[ScoringCategories]...';


GO
CREATE TABLE [SystemConfig].[ScoringCategories] (
    [CategoryID]   INT          NOT NULL,
    [CategoryType] VARCHAR (1)  NOT NULL,
    [Abbreviation] VARCHAR (10) NOT NULL,
    [Description]  VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([CategoryID] ASC)
);


GO
PRINT N'Creating Default Constraint on [Fantasy].[League]....';


GO
ALTER TABLE [Fantasy].[League]
    ADD DEFAULT 'R' FOR [LeagueType];


GO
PRINT N'Creating Default Constraint on [Fantasy].[League]....';


GO
ALTER TABLE [Fantasy].[League]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [Fantasy].[League]....';


GO
ALTER TABLE [Fantasy].[League]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [Fantasy].[Team]....';


GO
ALTER TABLE [Fantasy].[Team]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [Fantasy].[Team]....';


GO
ALTER TABLE [Fantasy].[Team]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [Fantasy].[Roster]....';


GO
ALTER TABLE [Fantasy].[Roster]
    ADD DEFAULT 'A' FOR [Status];


GO
PRINT N'Creating Default Constraint on [Fantasy].[Roster]....';


GO
ALTER TABLE [Fantasy].[Roster]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [Fantasy].[Roster]....';


GO
ALTER TABLE [Fantasy].[Roster]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Config]....';


GO
ALTER TABLE [LeagueConfig].[Config]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Config]....';


GO
ALTER TABLE [LeagueConfig].[Config]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 1 FOR [ChangeLineUpPolicy];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 'D' FOR [LineUpEffectiveDate];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 'GFEP' FOR [LineUpDeadline];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 1 FOR [RestrictDL];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 1 FOR [RestrictMinors];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 0 FOR [EnforceLineUpPolicy];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 'ABC' FOR [AddDropPolicy];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 'VP' FOR [TradePolicy];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 1 FOR [AllowOffseasonTrades];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT 1 FOR [AllowDraftPickTrading];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Transaction_Policies]....';


GO
ALTER TABLE [LeagueConfig].[Transaction_Policies]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System]
    ADD DEFAULT 'H2H' FOR [ScoringType];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System]
    ADD DEFAULT 0 FOR [UseCategoryWeights];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category_PointBonuses]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category_PointBonuses]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category_PointBonuses]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category_PointBonuses]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category_PointRange]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category_PointRange]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category_PointRange]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category_PointRange]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category]
    ADD DEFAULT 0 FOR [UseScoringRanges];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category]
    ADD DEFAULT 0 FOR [UseScoringBonuses];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [LeagueConfig].[Scoring_System_Category]....';


GO
ALTER TABLE [LeagueConfig].[Scoring_System_Category]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [MLB].[Player]....';


GO
ALTER TABLE [MLB].[Player]
    ADD DEFAULT GETDATE() FOR [Birthdate];


GO
PRINT N'Creating Default Constraint on [MLB].[Player]....';


GO
ALTER TABLE [MLB].[Player]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [MLB].[Player]....';


GO
ALTER TABLE [MLB].[Player]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [MLB].[Position]....';


GO
ALTER TABLE [MLB].[Position]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [MLB].[Position]....';


GO
ALTER TABLE [MLB].[Position]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Daily]....';


GO
ALTER TABLE [MLB].[Stats_Daily]
    ADD DEFAULT GETDATE() FOR [Day];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Daily]....';


GO
ALTER TABLE [MLB].[Stats_Daily]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Daily]....';


GO
ALTER TABLE [MLB].[Stats_Daily]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Projection]....';


GO
ALTER TABLE [MLB].[Stats_Projection]
    ADD DEFAULT GETDATE() FOR [Day];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Projection]....';


GO
ALTER TABLE [MLB].[Stats_Projection]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Projection]....';


GO
ALTER TABLE [MLB].[Stats_Projection]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Season]....';


GO
ALTER TABLE [MLB].[Stats_Season]
    ADD DEFAULT GETDATE() FOR [Day];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Season]....';


GO
ALTER TABLE [MLB].[Stats_Season]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [MLB].[Stats_Season]....';


GO
ALTER TABLE [MLB].[Stats_Season]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [MLB].[Team]....';


GO
ALTER TABLE [MLB].[Team]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating Default Constraint on [MLB].[Team]....';


GO
ALTER TABLE [MLB].[Team]
    ADD DEFAULT ('MLB') FOR [League];


GO
PRINT N'Creating Default Constraint on [MLB].[Team]....';


GO
ALTER TABLE [MLB].[Team]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [MLB].[Team]....';


GO
ALTER TABLE [MLB].[Team]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [MLB].[Eligibility]....';


GO
ALTER TABLE [MLB].[Eligibility]
    ADD DEFAULT GETDATE() FOR [Season];


GO
PRINT N'Creating Default Constraint on [MLB].[Eligibility]....';


GO
ALTER TABLE [MLB].[Eligibility]
    ADD DEFAULT 1 FOR [PrimaryPos];


GO
PRINT N'Creating Default Constraint on [MLB].[Eligibility]....';


GO
ALTER TABLE [MLB].[Eligibility]
    ADD DEFAULT 0 FOR [DaysPlayed];


GO
PRINT N'Creating Default Constraint on [MLB].[Eligibility]....';


GO
ALTER TABLE [MLB].[Eligibility]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Created];


GO
PRINT N'Creating Default Constraint on [MLB].[Eligibility]....';


GO
ALTER TABLE [MLB].[Eligibility]
    ADD DEFAULT CURRENT_TIMESTAMP FOR [Date_Time_Modified];


GO
PRINT N'Creating Default Constraint on [SystemConfig].[ScoringCategories]....';


GO
ALTER TABLE [SystemConfig].[ScoringCategories]
    ADD DEFAULT 'B' FOR [CategoryType];


GO
PRINT N'Creating FK_Eligilblity_Posiition...';


GO
ALTER TABLE [MLB].[Eligibility]
    ADD CONSTRAINT [FK_Eligilblity_Posiition] FOREIGN KEY ([PositionID]) REFERENCES [MLB].[Position] ([PositionID]) ON DELETE CASCADE;


GO
PRINT N'Creating CK_Fantasy_League_LeagueType...';


GO
ALTER TABLE [Fantasy].[League]
    ADD CONSTRAINT [CK_Fantasy_League_LeagueType] CHECK (LeagueType = 'R' OR LeagueType = 'K' OR LeagueType = 'D');


GO
PRINT N'Creating CK_Fantasy_Roster_Status...';


GO
ALTER TABLE [Fantasy].[Roster]
    ADD CONSTRAINT [CK_Fantasy_Roster_Status] CHECK (Status = 'A' OR Status = 'R' OR Status = 'I' OR Status = 'M');


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a104cb65-9385-4dc2-b57e-f64232724378')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a104cb65-9385-4dc2-b57e-f64232724378')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '33434006-ebab-4d43-9820-2d7784c34963')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('33434006-ebab-4d43-9820-2d7784c34963')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c1b11c15-f53d-4339-9f12-ccf380974894')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c1b11c15-f53d-4339-9f12-ccf380974894')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6bc79645-936b-424c-bfc5-36863d03cd30')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6bc79645-936b-424c-bfc5-36863d03cd30')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7461fb3d-604b-45e3-8cef-066c8faa296b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7461fb3d-604b-45e3-8cef-066c8faa296b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5947b25a-cb72-425c-9acb-3bdb452c414d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5947b25a-cb72-425c-9acb-3bdb452c414d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'de64296c-195f-4ddb-ba0b-d935aa3ef404')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('de64296c-195f-4ddb-ba0b-d935aa3ef404')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ec8960c5-6719-4e6a-a994-15a668ecdd35')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ec8960c5-6719-4e6a-a994-15a668ecdd35')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cb2bb488-6691-46f8-9f91-401250d7aaf8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cb2bb488-6691-46f8-9f91-401250d7aaf8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e67522a1-092b-4857-a6d4-abe4c639b5d3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e67522a1-092b-4857-a6d4-abe4c639b5d3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8f6e4b0d-9841-475b-bb0a-c65fd7a963a0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8f6e4b0d-9841-475b-bb0a-c65fd7a963a0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0862d618-8fdb-4ede-989e-7ad9f594aa89')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0862d618-8fdb-4ede-989e-7ad9f594aa89')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '46d3c149-f3a9-4332-97c4-fe22d350660d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('46d3c149-f3a9-4332-97c4-fe22d350660d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '24517ccc-2bb2-43b3-bbdb-f1c46ebf7b44')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('24517ccc-2bb2-43b3-bbdb-f1c46ebf7b44')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5d036a95-55f8-4749-a83c-b002c8a011f3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5d036a95-55f8-4749-a83c-b002c8a011f3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '241f56f2-5fae-4ee7-82b5-b7c7437fb43a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('241f56f2-5fae-4ee7-82b5-b7c7437fb43a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2e2f179c-e97c-44e5-9848-6eaec1244d40')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2e2f179c-e97c-44e5-9848-6eaec1244d40')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '94f4deb8-d1b8-42db-abc8-1c383e6f38dc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('94f4deb8-d1b8-42db-abc8-1c383e6f38dc')

GO

GO
-- disable referential integrity
EXEC sp_MSForEachTable 'ALTER TABLE ? NOCHECK CONSTRAINT ALL' 
GO

EXEC sp_MSForEachTable 'DELETE FROM ?' 
GO

-- Teams
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (1, 'ARI', 'Diamondbacks')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (2, 'ATL', 'Braves')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (3, 'BAL', 'Orioles')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (4, 'BOS', 'Red Sox')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (5, 'CHC', 'Cubs')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (6, 'CHW', 'White Sox')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (7, 'CIN', 'Reds')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (8, 'CLE', 'Indians')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (9, 'COL', 'Rockies')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (10, 'DET', 'Tigers')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (11, 'HOU', 'Astros')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (12, 'KC', 'Royals')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (13, 'LAA', 'Angels')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (14, 'LAD', 'Dodgers')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (15, 'MIA', 'Marlins')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (16, 'MIL', 'Brewers')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (17, 'MIN', 'Twins')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (18, 'NYM', 'Mets')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (19, 'NYY', 'Yankees')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (20, 'OAK', 'As')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (21, 'PHI', 'Phillies')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (22, 'PIT', 'Pirates')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (23, 'SD', 'Padres')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (24, 'SEA', 'Mariners')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (25, 'SF', 'Giants')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (26, 'STL', 'Cardinals')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (27, 'TB', 'Rays')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (28, 'TEX', 'Rangers')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (29, 'TOR', 'Blue Jays')
INSERT INTO MLB.Team (TeamID, Abbreviation, Name) VALUES (30, 'WAS', 'Nationals')

-- Positions
INSERT INTO MLB.Position (PositionID, Name) VALUES (1, 'C')
INSERT INTO MLB.Position (PositionID, Name) VALUES (2, '1B')
INSERT INTO MLB.Position (PositionID, Name) VALUES (3, '2B')
INSERT INTO MLB.Position (PositionID, Name) VALUES (4, '3B')
INSERT INTO MLB.Position (PositionID, Name) VALUES (5, 'SS')
INSERT INTO MLB.Position (PositionID, Name) VALUES (6, 'OF')
INSERT INTO MLB.Position (PositionID, Name) VALUES (7, 'SP')
INSERT INTO MLB.Position (PositionID, Name) VALUES (8, 'RP')

-- Players
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (1, 'Buster', 'Posey', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (2, 'Freddie', 'Freeman', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (3, 'Kolten', 'Wong', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (4, 'Josh', 'Donaldson', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (5, 'Corey', 'Seager', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (6, 'Mookie', 'Betts', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (7, 'George', 'Springer', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (8, 'Justin', 'Upton', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (9, 'Adrian', 'Gonzalez', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (10, 'Anthony', 'Rendon', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (11, 'Kyle', 'Seager', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (12, 'Addison', 'Russell', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (13, 'Corey', 'Dickerson', 'R', 'R', '1', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (14, 'Jurickson', 'Profar', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (15, 'Jorge', 'Alfaro', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (16, 'Franklin', 'Barreto', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (17, 'Trevor', 'Story', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (18, 'Lewis', 'Brinson', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (19, 'Byron', 'Buxton', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (20, 'Alex', 'Jackson', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (21, 'Carlos', 'Carrasco', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (22, 'Tyson', 'Ross', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (23, 'Danny', 'Salazar', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (24, 'Luis', 'Severino', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (25, 'Jordan', 'Zimmermann', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (26, 'Jacob', 'deGrom', 'R', 'R', '2', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (27, 'Zach', 'Britton', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (28, 'Jeurys', 'Familia', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (29, 'Huston', 'Street', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (30, 'Yu', 'Darvish', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (31, 'Nathan', 'Karns', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (32, 'Carlos', 'Rodon', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (33, 'Hector', 'Santiago', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (34, 'Yordano', 'Ventura', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (35, 'Homer', 'Bailey', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (36, 'Michael', 'Fulmer', 'R', 'R', '3', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (37, 'Robert', 'Stephenson', 'R', 'R', '4', GETDATE())
INSERT INTO MLB.Player (PlayerID, FirstName, LastName, Bats, Throws, TeamID, Birthdate) VALUES (38, 'Jose', 'De Leon', 'R', 'R', '4', GETDATE())

-- MLB.Eligibility 
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (1, 1)
INSERT INTO MLB.Eligibility (PlayerID, PositionID, PrimaryPos, DaysPlayed) VALUES (1, 2, 0, 25)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (2, 2)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (3, 3)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (4, 4)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (5, 5)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (6, 6)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (7, 6)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (8, 6)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (9, 2)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (10, 4)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (11, 4)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (12, 5)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (13, 6)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (14, 3)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (15, 1)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (16, 5)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (17, 5)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (18, 6)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (19, 6)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (20, 6)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (21, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (22, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (23, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (24, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (25, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (26, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (27, 8)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (28, 8)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (29, 8)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (30, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (31, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (32, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (33, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (34, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (35, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (36, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (37, 7)
INSERT INTO MLB.Eligibility (PlayerID, PositionID) VALUES (38, 7)

-- Fantasy Leagues
INSERT INTO Fantasy.League (FantasyLeagueID, Name, OwnerID) VALUES (1, 'The Fall Classic', 1)
INSERT INTO Fantasy.League (FantasyLeagueID, Name, OwnerID) VALUES (2, 'Chicagos Best', 2)

-- Fantasy Teams
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 1, 'Busten in her Posey', 'BUS')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 2, 'Polish Powerhouse', 'POL')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 3, 'Crazy Crackers', 'CRA')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 4, 'Hannibal Lester', 'HAN')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 5, 'Rachet Hoes', 'RAC')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 6, 'Dutch Oven', 'DUT')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 7, 'Head First', 'HEA')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 8, 'Sports Machine', 'SPO')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 9, 'Sons of Pitches', 'SON')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (1, 10, 'TasteMyBabyGravy', 'TAS')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 1, 'Trouts R Us', 'TRO')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 2, 'The Dutch Oven', 'THE')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 3, 'Ball Bangerz! Win or Die', 'BAL')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 4, 'Tanaka Time', 'TAN')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 5, 'Lost Productivity', 'LOS')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 6, 'Fo Shizzo my Rizzo', 'FO ')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 7, 'Joliet Oles', 'JOL')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 8, 'La Flama Blanca', 'LA ')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 9, 'Alcides Nuts', 'ALC')
INSERT INTO Fantasy.Team (FantasyLeagueID, FantasyTeamID, Name, Abbreviation) VALUES (2, 10, 'Team Boner', 'TEA')

-- Fantasy Rosters
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 1)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 2)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 3)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 4)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 5)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 6)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 7)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 8)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 9)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 10)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 11)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 12)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 13)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 14)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 15)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 16)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 17)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 18)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 19)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 20)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 21)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 22)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 23)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 24)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 25)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 26)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 27)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 28)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 29)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 30)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 31)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 32)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 33)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 34)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 35)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 36)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 37)
INSERT INTO Fantasy.Roster (FantasyLeagueID, FantasyTeamID, PlayerID) VALUES (1, 1, 38)


-- enable referential integrity again 
EXEC sp_MSForEachTable 'ALTER TABLE ? WITH CHECK CHECK CONSTRAINT ALL' 
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
